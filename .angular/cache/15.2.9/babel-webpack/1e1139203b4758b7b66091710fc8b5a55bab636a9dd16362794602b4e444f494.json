{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BooksService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseapi = 'http://localhost:3000/';\n  }\n  getpagebooks(page) {\n    return this.httpClient.get('http://localhost:3000/' + '?page=' + page);\n  }\n  getAllBooks() {\n    return this.httpClient.get(this.baseapi + 'books');\n  }\n  //Fetch product by id\n  getBookById(id) {\n    return this.http.get(this.baseapi + 'book/' + id);\n  }\n}\n_class = BooksService;\n_class.ɵfac = function BooksService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAWA,OAAM,MAAOA,YAAY;EAOvBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAH9B,YAAO,GAAG,wBAAwB;EAGY;EAE9CC,YAAY,CAACC,IAAY;IAEvB,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAC,wBAAwB,GAAG,QAAQ,GAAGD,IAAI,CAAC;EACxE;EAEAE,WAAW;IACT,OAAO,IAAI,CAACJ,UAAU,CAACG,GAAG,CAAC,IAAI,CAACE,OAAO,GAAG,OAAO,CAAC;EACpD;EAEA;EACAC,WAAW,CAACC,EAAO;IACjB,OAAO,IAAI,CAACC,IAAI,CAACL,GAAG,CAAC,IAAI,CAACE,OAAO,GAAG,OAAO,GAAGE,EAAE,CAAC;EACnD;;SArBWT,YAAY;;mBAAZA,MAAY;AAAA;;SAAZA,MAAY;EAAAW,SAAZX,MAAY;EAAAY,YAFX;AAAM","names":["BooksService","constructor","httpClient","getpagebooks","page","get","getAllBooks","baseapi","getBookById","id","http","factory","providedIn"],"sourceRoot":"","sources":["/Users/salsabeel/Desktop/Book-Store-Angular/src/app/books/services/books.service.ts"],"sourcesContent":["import { Injectable, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DetailsofbooksComponent } from '../components/detailsofbooks/detailsofbooks.component';\nimport { Book } from 'src/app/entities/book.entity';\nimport { BooksModule } from '../books.module';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BooksService {\n  books!: Book[];\n  book!: Book;\n\n  baseapi = 'http://localhost:3000/';\n  http: any;\n\n  constructor(private httpClient: HttpClient) { }\n\n  getpagebooks(page: number) {\n\n    return this.httpClient.get('http://localhost:3000/' + '?page=' + page);\n  }\n\n  getAllBooks() {\n    return this.httpClient.get(this.baseapi + 'books');\n  }\n\n  //Fetch product by id\n  getBookById(id: any) {\n    return this.http.get(this.baseapi + 'book/' + id)\n  }\n\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}