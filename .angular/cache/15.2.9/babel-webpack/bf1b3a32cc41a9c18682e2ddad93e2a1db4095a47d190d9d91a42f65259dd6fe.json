{"ast":null,"code":"var _class;\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BooksService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = '/assets/books.json';\n  }\n  getpagebooks(page) {\n    return this.httpClient.get('/assets/books.json' + '?page=' + page);\n  }\n  getAllBooks() {\n    return this.httpClient.get('/assets/books.json');\n  }\n  getBookById(id) {\n    return this.http.get(this.url).pipe(map(response), {\n      return: response.find(item => item.id == id)\n    });\n  }\n}\n_class = BooksService;\n_class.ɵfac = function BooksService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAGA,SAASA,GAAG,QAAQ,gBAAgB;;;AAKpC,OAAM,MAAOC,YAAY;EAMvBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAH9B,QAAG,GAAG,oBAAoB;EAGoB;EAE9CC,YAAY,CAACC,IAAY;IAEvB,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAC,oBAAoB,GAAG,QAAQ,GAAGD,IAAI,CAAC;EACpE;EAEAE,WAAW;IACT,OAAO,IAAI,CAACJ,UAAU,CAACG,GAAG,CAAC,oBAAoB,CAAC;EAClD;EAGAE,WAAW,CAACC,EAAO;IACjB,OAAO,IAAI,CAACC,IAAI,CAACJ,GAAG,CAAC,IAAI,CAACK,GAAG,CAAC,CAC7BC,IAAI,CAACZ,GAAG,CAACa,QAAQ,CAAC,EAAI;MACrBC,MAAM,EAACD,QAAQ,CAACE,IAAI,CAAEC,IAAkB,IAAIA,IAAI,CAACP,EAAE,IAAIA,EAAG;KAC7D,CAAC;EACJ;;SAvBaR,YAAY;;mBAAZA,MAAY;AAAA;;SAAZA,MAAY;EAAAgB,SAAZhB,MAAY;EAAAiB,YAFX;AAAM","names":["map","BooksService","constructor","httpClient","getpagebooks","page","get","getAllBooks","getBookById","id","http","url","pipe","response","return","find","item","factory","providedIn"],"sourceRoot":"","sources":["/Users/salsabeel/Desktop/Book-Store-Angular/src/app/books/services/books.service.ts"],"sourcesContent":["import { Injectable, Input } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { DetailsofbooksComponent } from '../components/detailsofbooks/detailsofbooks.component';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BooksService {\n\n  jsons: any;\n  url = '/assets/books.json';\n  http: any;\n\n  constructor(private httpClient: HttpClient) { }\n\n  getpagebooks(page: number) {\n\n    return this.httpClient.get('/assets/books.json' + '?page=' + page);\n  }\n\n  getAllBooks() {\n    return this.httpClient.get('/assets/books.json');\n  }\n\n\n  getBookById(id: any) {\n    return this.http.get(this.url)\n    .pipe(map(response) => {\n      return response.find((item: { id: any; })=>(item.id == id))\n  })\n}\n}\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}